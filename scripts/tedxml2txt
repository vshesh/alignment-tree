#!/usr/bin/env python3

from __future__ import print_function
import sys

if len(sys.argv) < 2:
  print("usage: tedxml2txt xmlfile")
  exit(1)


# this implementation "works" but it's very slow, probably because
# there is so much parsing going on.
#----------------------------------------------------------------------
# from bs4 import BeautifulSoup as soup


# s = soup(open(sys.argv[1]), 'lxml')
# for line in map(lambda x: s.talkid.contents[0] + '-' + x['id'] + '\t' + x.contents[0], 
#                 s.file.transcription.find_all('seekvideo')):
#   print(line)


import mmap
import re

def clean(sentence):
  s = sentence.replace('\n', ' ')
  s = re.sub(r' "(\S)', r' " \1', s)
  s = re.sub(r'(\S)" ', r'\1 " ', s)
  s = re.sub(r'([;:?!])', r' \1', s)
  s = re.sub(r'(\S), ', r'\1 , ', s)
  s = '" ' + s[1:] if s[0] == '"' else s
  return s

# Here it is faster - the only things we care about are the talkid
# and the seekid and the text.
idindex = 0
talkid = ''
with open(sys.argv[1], 'rb', 0) as file:
  with mmap.mmap(file.fileno(), 0, access=mmap.ACCESS_READ) as xml:
    # get the talkid
    idindex = xml.find(b'<talkid>')
    talkid = xml[idindex+len('<talkid>'):xml.find(b'</talkid>')].decode('ascii')

count = 1
for line in open(sys.argv[1]):
  if 'seekvideo' in line:
    print(talkid + '-' + re.search(r'id="(\d+)"', line).group(1), 
          '\t',
          clean(line.split('>')[1].split('<')[0]))

  count += 1